eigensolver
{
  "number of eigenvectors" 2
  tolerance 1e-14
}

smoother
{
  type  "Gauss-Seidel"
}

"is preconditioner" false

agglomeration
{
  partitioner block
  nx 2
  ny 2
  nz 2
}

material_property
{
  type constant
}

laplace
{
  distort_random false
  reordering None
  n_refinements 5
}

; Params for running ML
use_raw_ml false
hidden {
  "max levels" 1 ; use a single MFMG level
  coarse
  {
    type ML
    params
    {
      ; "ML output" 43 ; exhaustive output
      ; "max levels" 3 ; control number of ML levels if wanted
      "coarse: type" Amesos-KLU ; for some reason, without specifying this I'm getting MLS/Chebyshev on coarse ML, which is not what we want
      "smoother: type" "symmetric Gauss-Seidel" ; works a lot better than default Chebyshev/MLS
    }
  }
}
